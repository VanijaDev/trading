// Conditions:
// ✅ this pattern must be marked with the red arrow above the second candle.
// ✅ two candles
// ✅ candles of opposite directions (one bullish, another bearish or vise versa)
// ✅ the total size of the second candle must be bigger than the first one by minimum n% 
// ✅ the side of the closing for the first candle & opening for the second must contain no tails or maximum n% of it's candle body. Example: closing side is top if the first candle is bullish, bottom - is the first candle is bearish
// ✅ max tail size for each timeframe
// ✅ the pattern must be on top / bottom (last "n" candles)
// ✅ mark the pattern below if bullish / above if bearish
// ✅ second candle body size must be > than the past n candles average size
// - better UI marker

//@version=6
indicator("Reinforced Engulfing Pattern", overlay=true, shorttitle="2C Bigger")

CURRENT_CANDLE_BIGGER_THAN_PREV_PERCENTAGE_MIN = 20
TAIL_TO_BODY_MAX_PERCENTAGE = 20
MAX_TAIL_TF_15_MIN = 50
MAX_TAIL_TF_1_HOUR = 100
PATTERN_TOP_OR_BOTTOM_CANDLES_COUNT = 10
SECOND_BODY_AVG_LOOKBACK = 30

// --- Minimal pattern per request ---
// Conditions:
// - two candles
// - opposite directions (one bullish, another bearish)
// - total size (high-low) of the second candle > total size of the first candle

// Condition 1: Candle directions
bullPrev = close[1] > open[1]
bullCur = close > open

// Opposite directions between the two candles
oppositeDir = (bullPrev and not bullCur) or (not bullPrev and bullCur)

// Condition 2: Candle total ranges
bodyPrev = math.abs(close[1] - open[1])
bodyCur = math.abs(close - open)

// Second candle range must be larger than the first
secondLarger = bodyCur > bodyPrev * (1 + CURRENT_CANDLE_BIGGER_THAN_PREV_PERCENTAGE_MIN / 100)

// Condition 3: Tail size check (max TAIL_TO_BODY_MAX_PERCENTAGE of candle body)
// For bullish current candle: check low-close tail of prev and low-open tail of current
// For bearish current candle: check high-close tail of prev and high-open tail of current
prevTailSize = bullPrev ? (high[1] - close[1]) : (close[1] - low[1])
curTailSize = bullCur ? (open - low) : (high - open)

// Calculate % of each candle's total range
prevTailLimit = bodyPrev * (TAIL_TO_BODY_MAX_PERCENTAGE / 100)
curTailLimit = bodyCur * (TAIL_TO_BODY_MAX_PERCENTAGE / 100)

// Condition 4: Additional tail size limits based on timeframe
tf = timeframe.period
maxTailLimit = tf == "15" ? MAX_TAIL_TF_15_MIN : tf == "60" ? MAX_TAIL_TF_1_HOUR : na
if not na(maxTailLimit)
    prevTailLimit := math.min(prevTailLimit, maxTailLimit)
    curTailLimit := math.min(curTailLimit, maxTailLimit)

// Check if both tails are within TAIL_TO_BODY_MAX_PERCENTAGE limit
validTails = (prevTailSize <= prevTailLimit) and (curTailSize <= curTailLimit)

// Condition 5: First candle must be an extreme vs previous N candles
// If the first candle (prev) is bullish -> its high must be higher than the previous N candles
// If the first candle (prev) is bearish -> its low must be lower than the previous N candles
lookbackN = PATTERN_TOP_OR_BOTTOM_CANDLES_COUNT
prevWindowHigh = ta.highest(high[2], lookbackN)
prevWindowLow = ta.lowest(low[2], lookbackN)
prevIsTop = bullPrev and (high[1] > prevWindowHigh)
prevIsBottom = (not bullPrev) and (low[1] < prevWindowLow)
condition5 = prevIsTop or prevIsBottom

// Condition 6: Second candle body > average body of past N candles (excludes current bar)
avgBodyPrevN = ta.sma(math.abs(close - open), SECOND_BODY_AVG_LOOKBACK)[1]
condition6 = bodyCur > avgBodyPrevN

// Final pattern condition
pattern = oppositeDir and secondLarger and validTails and condition5 and condition6

// Plot markers: below if bullish current candle, above if bearish current candle
plotshape(pattern and bullCur, title="Two Candles, no tails (bullish)", location=location.belowbar, style=shape.arrowup, color=color.new(color.green, 0), size=size.tiny, text="2C")
plotshape(pattern and not bullCur, title="Two Candles, no tails (bearish)", location=location.abovebar, style=shape.arrowdown, color=color.new(color.red, 0), size=size.tiny, text="2C")

// Alert when the pattern forms on the current bar
alertcondition(pattern, title="Two Candles, no tails", message="Two-candle opposite pattern: second candle larger than first")